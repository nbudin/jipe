JIPE: In-Place Editing Components for Jester
============================================

JIPE stands for Jester In-Place Editing.  It started out as a replacement for
Rails' built-in in_place_editor helper function using Eric Mill's Jester
library, but is beginning to add additional editing widgets as well.

The upshot of this is that if you have RESTful controllers in your Rails app,
then JIPE can very quickly help you set up in-place editing for your RESTful
objects.

Usage
=====

To use JIPE, you'll need to include the Javascript files in your layout. We like
to use the Engines plugin for this, which enables the following syntax:

<%= javascript_include_tag 'jester', :plugin => 'jipe' %>
<%= javascript_include_tag 'jipe', :plugin => 'jipe' %>

However, if you don't like doing that, you can just copy the files from
vendor/plugins/jipe/assets/javascripts/ into public/javascripts and remove the
:plugin => 'jipe' clause from each of the above statements.  If you do that,
you'll also need to copy edit-field.png from the assets/images directory into
your public/images directory.

You'll also need to tell Jester how to access your REST resources, like so:

<script type="text/javascript">
Resource.model("Post");
</script>

Now that you've done that, creating in-place editing fields is easy:

Title: <%= jipe_editor @post, "title" %><br/>
<%= jipe_editor @post, "body", :rows => 4 %>

In addition to textbox-style in-place editors, JIPE lets you do clickable image
toggles for boolean fields.  For example:

Mood: <%= jipe_image_toggle @post, "is_happy", "smiley.png", "frowny.png" %>